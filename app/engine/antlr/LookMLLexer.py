# Generated from LookMLLexer.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,41,370,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,
        1,1,1,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,
        4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,
        7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,
        1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,
        1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
        1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
        1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
        1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,
        1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,
        1,34,1,34,1,35,1,35,5,35,321,8,35,10,35,12,35,324,9,35,1,36,4,36,
        327,8,36,11,36,12,36,328,1,36,1,36,4,36,333,8,36,11,36,12,36,334,
        3,36,337,8,36,1,37,1,37,5,37,341,8,37,10,37,12,37,344,9,37,1,37,
        1,37,1,38,1,38,1,39,1,39,5,39,352,8,39,10,39,12,39,355,9,39,1,39,
        3,39,358,8,39,1,39,1,39,1,39,1,39,1,40,4,40,365,8,40,11,40,12,40,
        366,1,40,1,40,1,353,0,41,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
        19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
        41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,
        63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,1,0,
        5,3,0,65,90,95,95,97,122,5,0,45,46,48,57,65,90,95,95,97,122,1,0,
        48,57,3,0,9,10,13,13,34,34,3,0,9,10,13,13,32,32,377,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
        1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,
        1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,
        1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,1,83,
        1,0,0,0,3,90,1,0,0,0,5,96,1,0,0,0,7,101,1,0,0,0,9,111,1,0,0,0,11,
        127,1,0,0,0,13,135,1,0,0,0,15,142,1,0,0,0,17,152,1,0,0,0,19,160,
        1,0,0,0,21,165,1,0,0,0,23,169,1,0,0,0,25,176,1,0,0,0,27,182,1,0,
        0,0,29,187,1,0,0,0,31,199,1,0,0,0,33,213,1,0,0,0,35,226,1,0,0,0,
        37,235,1,0,0,0,39,240,1,0,0,0,41,255,1,0,0,0,43,270,1,0,0,0,45,281,
        1,0,0,0,47,294,1,0,0,0,49,296,1,0,0,0,51,298,1,0,0,0,53,300,1,0,
        0,0,55,302,1,0,0,0,57,304,1,0,0,0,59,306,1,0,0,0,61,308,1,0,0,0,
        63,310,1,0,0,0,65,312,1,0,0,0,67,314,1,0,0,0,69,316,1,0,0,0,71,318,
        1,0,0,0,73,326,1,0,0,0,75,338,1,0,0,0,77,347,1,0,0,0,79,349,1,0,
        0,0,81,364,1,0,0,0,83,84,5,108,0,0,84,85,5,111,0,0,85,86,5,111,0,
        0,86,87,5,107,0,0,87,88,5,101,0,0,88,89,5,114,0,0,89,2,1,0,0,0,90,
        91,5,109,0,0,91,92,5,111,0,0,92,93,5,100,0,0,93,94,5,101,0,0,94,
        95,5,108,0,0,95,4,1,0,0,0,96,97,5,118,0,0,97,98,5,105,0,0,98,99,
        5,101,0,0,99,100,5,119,0,0,100,6,1,0,0,0,101,102,5,100,0,0,102,103,
        5,105,0,0,103,104,5,109,0,0,104,105,5,101,0,0,105,106,5,110,0,0,
        106,107,5,115,0,0,107,108,5,105,0,0,108,109,5,111,0,0,109,110,5,
        110,0,0,110,8,1,0,0,0,111,112,5,100,0,0,112,113,5,105,0,0,113,114,
        5,109,0,0,114,115,5,101,0,0,115,116,5,110,0,0,116,117,5,115,0,0,
        117,118,5,105,0,0,118,119,5,111,0,0,119,120,5,110,0,0,120,121,5,
        95,0,0,121,122,5,103,0,0,122,123,5,114,0,0,123,124,5,111,0,0,124,
        125,5,117,0,0,125,126,5,112,0,0,126,10,1,0,0,0,127,128,5,109,0,0,
        128,129,5,101,0,0,129,130,5,97,0,0,130,131,5,115,0,0,131,132,5,117,
        0,0,132,133,5,114,0,0,133,134,5,101,0,0,134,12,1,0,0,0,135,136,5,
        102,0,0,136,137,5,105,0,0,137,138,5,108,0,0,138,139,5,116,0,0,139,
        140,5,101,0,0,140,141,5,114,0,0,141,14,1,0,0,0,142,143,5,112,0,0,
        143,144,5,97,0,0,144,145,5,114,0,0,145,146,5,97,0,0,146,147,5,109,
        0,0,147,148,5,101,0,0,148,149,5,116,0,0,149,150,5,101,0,0,150,151,
        5,114,0,0,151,16,1,0,0,0,152,153,5,101,0,0,153,154,5,120,0,0,154,
        155,5,112,0,0,155,156,5,108,0,0,156,157,5,111,0,0,157,158,5,114,
        0,0,158,159,5,101,0,0,159,18,1,0,0,0,160,161,5,106,0,0,161,162,5,
        111,0,0,162,163,5,105,0,0,163,164,5,110,0,0,164,20,1,0,0,0,165,166,
        5,115,0,0,166,167,5,113,0,0,167,168,5,108,0,0,168,22,1,0,0,0,169,
        170,5,115,0,0,170,171,5,113,0,0,171,172,5,108,0,0,172,173,5,95,0,
        0,173,174,5,111,0,0,174,175,5,110,0,0,175,24,1,0,0,0,176,177,5,97,
        0,0,177,178,5,108,0,0,178,179,5,105,0,0,179,180,5,97,0,0,180,181,
        5,115,0,0,181,26,1,0,0,0,182,183,5,116,0,0,183,184,5,121,0,0,184,
        185,5,112,0,0,185,186,5,101,0,0,186,28,1,0,0,0,187,188,5,112,0,0,
        188,189,5,114,0,0,189,190,5,105,0,0,190,191,5,109,0,0,191,192,5,
        97,0,0,192,193,5,114,0,0,193,194,5,121,0,0,194,195,5,95,0,0,195,
        196,5,107,0,0,196,197,5,101,0,0,197,198,5,121,0,0,198,30,1,0,0,0,
        199,200,5,100,0,0,200,201,5,101,0,0,201,202,5,114,0,0,202,203,5,
        105,0,0,203,204,5,118,0,0,204,205,5,101,0,0,205,206,5,100,0,0,206,
        207,5,95,0,0,207,208,5,116,0,0,208,209,5,97,0,0,209,210,5,98,0,0,
        210,211,5,108,0,0,211,212,5,101,0,0,212,32,1,0,0,0,213,214,5,114,
        0,0,214,215,5,101,0,0,215,216,5,108,0,0,216,217,5,97,0,0,217,218,
        5,116,0,0,218,219,5,105,0,0,219,220,5,111,0,0,220,221,5,110,0,0,
        221,222,5,115,0,0,222,223,5,104,0,0,223,224,5,105,0,0,224,225,5,
        112,0,0,225,34,1,0,0,0,226,227,5,114,0,0,227,228,5,101,0,0,228,229,
        5,113,0,0,229,230,5,117,0,0,230,231,5,105,0,0,231,232,5,114,0,0,
        232,233,5,101,0,0,233,234,5,100,0,0,234,36,1,0,0,0,235,236,5,108,
        0,0,236,237,5,105,0,0,237,238,5,110,0,0,238,239,5,107,0,0,239,38,
        1,0,0,0,240,241,5,97,0,0,241,242,5,108,0,0,242,243,5,108,0,0,243,
        244,5,111,0,0,244,245,5,119,0,0,245,246,5,101,0,0,246,247,5,100,
        0,0,247,248,5,95,0,0,248,249,5,118,0,0,249,250,5,97,0,0,250,251,
        5,108,0,0,251,252,5,117,0,0,252,253,5,101,0,0,253,254,5,115,0,0,
        254,40,1,0,0,0,255,256,5,115,0,0,256,257,5,113,0,0,257,258,5,108,
        0,0,258,259,5,95,0,0,259,260,5,116,0,0,260,261,5,97,0,0,261,262,
        5,98,0,0,262,263,5,108,0,0,263,264,5,101,0,0,264,265,5,95,0,0,265,
        266,5,110,0,0,266,267,5,97,0,0,267,268,5,109,0,0,268,269,5,101,0,
        0,269,42,1,0,0,0,270,271,5,116,0,0,271,272,5,105,0,0,272,273,5,109,
        0,0,273,274,5,101,0,0,274,275,5,102,0,0,275,276,5,114,0,0,276,277,
        5,97,0,0,277,278,5,109,0,0,278,279,5,101,0,0,279,280,5,115,0,0,280,
        44,1,0,0,0,281,282,5,118,0,0,282,283,5,97,0,0,283,284,5,108,0,0,
        284,285,5,117,0,0,285,286,5,101,0,0,286,287,5,95,0,0,287,288,5,102,
        0,0,288,289,5,111,0,0,289,290,5,114,0,0,290,291,5,109,0,0,291,292,
        5,97,0,0,292,293,5,116,0,0,293,46,1,0,0,0,294,295,5,40,0,0,295,48,
        1,0,0,0,296,297,5,41,0,0,297,50,1,0,0,0,298,299,5,123,0,0,299,52,
        1,0,0,0,300,301,5,125,0,0,301,54,1,0,0,0,302,303,5,91,0,0,303,56,
        1,0,0,0,304,305,5,93,0,0,305,58,1,0,0,0,306,307,5,58,0,0,307,60,
        1,0,0,0,308,309,5,44,0,0,309,62,1,0,0,0,310,311,5,59,0,0,311,64,
        1,0,0,0,312,313,5,46,0,0,313,66,1,0,0,0,314,315,5,61,0,0,315,68,
        1,0,0,0,316,317,5,124,0,0,317,70,1,0,0,0,318,322,7,0,0,0,319,321,
        7,1,0,0,320,319,1,0,0,0,321,324,1,0,0,0,322,320,1,0,0,0,322,323,
        1,0,0,0,323,72,1,0,0,0,324,322,1,0,0,0,325,327,7,2,0,0,326,325,1,
        0,0,0,327,328,1,0,0,0,328,326,1,0,0,0,328,329,1,0,0,0,329,336,1,
        0,0,0,330,332,5,46,0,0,331,333,7,2,0,0,332,331,1,0,0,0,333,334,1,
        0,0,0,334,332,1,0,0,0,334,335,1,0,0,0,335,337,1,0,0,0,336,330,1,
        0,0,0,336,337,1,0,0,0,337,74,1,0,0,0,338,342,5,34,0,0,339,341,8,
        3,0,0,340,339,1,0,0,0,341,344,1,0,0,0,342,340,1,0,0,0,342,343,1,
        0,0,0,343,345,1,0,0,0,344,342,1,0,0,0,345,346,5,34,0,0,346,76,1,
        0,0,0,347,348,5,36,0,0,348,78,1,0,0,0,349,353,5,35,0,0,350,352,9,
        0,0,0,351,350,1,0,0,0,352,355,1,0,0,0,353,354,1,0,0,0,353,351,1,
        0,0,0,354,357,1,0,0,0,355,353,1,0,0,0,356,358,5,13,0,0,357,356,1,
        0,0,0,357,358,1,0,0,0,358,359,1,0,0,0,359,360,5,10,0,0,360,361,1,
        0,0,0,361,362,6,39,0,0,362,80,1,0,0,0,363,365,7,4,0,0,364,363,1,
        0,0,0,365,366,1,0,0,0,366,364,1,0,0,0,366,367,1,0,0,0,367,368,1,
        0,0,0,368,369,6,40,0,0,369,82,1,0,0,0,9,0,322,328,334,336,342,353,
        357,366,1,6,0,0
    ]

class LookMLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    LOOKER = 1
    MODEL = 2
    VIEW = 3
    DIMENSION = 4
    DIMENSION_GROUP = 5
    MEASURE = 6
    FILTER = 7
    PARAMETER = 8
    EXPLORE = 9
    JOIN = 10
    SQL = 11
    SQL_ON = 12
    ALIAS = 13
    TYPE = 14
    PRIMARY_KEY = 15
    DERIVED_TABLE = 16
    RELATIONSHIP = 17
    REQUIRED = 18
    LINK = 19
    ALLOWED_VALUES = 20
    SQL_TABLE_NAME = 21
    TIMEFRAMES = 22
    VALUE_FORMAT = 23
    LPAREN = 24
    RPAREN = 25
    LBRACE = 26
    RBRACE = 27
    LBRACKET = 28
    RBRACKET = 29
    COLON = 30
    COMMA = 31
    SEMI = 32
    DOT = 33
    EQ = 34
    PIPE = 35
    IDENTIFIER = 36
    NUMBER = 37
    STRING = 38
    DOLLAR = 39
    COMMENT = 40
    WS = 41

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'looker'", "'model'", "'view'", "'dimension'", "'dimension_group'", 
            "'measure'", "'filter'", "'parameter'", "'explore'", "'join'", 
            "'sql'", "'sql_on'", "'alias'", "'type'", "'primary_key'", "'derived_table'", 
            "'relationship'", "'required'", "'link'", "'allowed_values'", 
            "'sql_table_name'", "'timeframes'", "'value_format'", "'('", 
            "')'", "'{'", "'}'", "'['", "']'", "':'", "','", "';'", "'.'", 
            "'='", "'|'", "'$'" ]

    symbolicNames = [ "<INVALID>",
            "LOOKER", "MODEL", "VIEW", "DIMENSION", "DIMENSION_GROUP", "MEASURE", 
            "FILTER", "PARAMETER", "EXPLORE", "JOIN", "SQL", "SQL_ON", "ALIAS", 
            "TYPE", "PRIMARY_KEY", "DERIVED_TABLE", "RELATIONSHIP", "REQUIRED", 
            "LINK", "ALLOWED_VALUES", "SQL_TABLE_NAME", "TIMEFRAMES", "VALUE_FORMAT", 
            "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", 
            "COLON", "COMMA", "SEMI", "DOT", "EQ", "PIPE", "IDENTIFIER", 
            "NUMBER", "STRING", "DOLLAR", "COMMENT", "WS" ]

    ruleNames = [ "LOOKER", "MODEL", "VIEW", "DIMENSION", "DIMENSION_GROUP", 
                  "MEASURE", "FILTER", "PARAMETER", "EXPLORE", "JOIN", "SQL", 
                  "SQL_ON", "ALIAS", "TYPE", "PRIMARY_KEY", "DERIVED_TABLE", 
                  "RELATIONSHIP", "REQUIRED", "LINK", "ALLOWED_VALUES", 
                  "SQL_TABLE_NAME", "TIMEFRAMES", "VALUE_FORMAT", "LPAREN", 
                  "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", 
                  "COLON", "COMMA", "SEMI", "DOT", "EQ", "PIPE", "IDENTIFIER", 
                  "NUMBER", "STRING", "DOLLAR", "COMMENT", "WS" ]

    grammarFileName = "LookMLLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


